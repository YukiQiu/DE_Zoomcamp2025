Question 1:
docker run -it --entrypoint bash python:3.12.8
pip --version

Result: 24.3.1

Question 2:
Postgres:5432
localhost:5433
hostname:db
db:5432

Question 3-6:

wget https://github.com/DataTalksClub/nyc-tlc-data/releases/download/misc/taxi_zone_lookup.csv

pgcli -h localhost -p 5433 -u root -d ny_taxi

docker run -it \
  -e POSTGRES_USER="root" \
  -e POSTGRES_PASSWORD="root" \
  -e POSTGRES_DB="ny_taxi" \
  -v $(pwd)/ny_taxi_postgres_data:/var/lib/postgresql/data \
  -p 5433:5432 \
  --network=pg-network \
  --name pg-database \
  postgres:13

docker run -it \
  -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
  -e PGADMIN_DEFAULT_PASSWORD="root" \
  -p 8080:80 \
  --network=pg-network \
  --name pgadmin-2 \
  dpage/pgadmin4

URL="https://github.com/DataTalksClub/nyc-tlc-data/releases/download/green/green_tripdata_2019-10.csv.gz"

docker run -it \
  --network=pg-network \
  ingest-data \
    --user=root \
    --password=root \
    --host=pg-database \
    --port=5432 \
    --db=ny_taxi \
    --table_name=green_taxi_trips \
    --url=${URL}


Question 3:
select case when trip_distance <= 1 then 'Up to 1 mile'
            when trip_distance <=3 then 'in between 1 and 3 miles'
			when trip_distance <=7 then 'in between 3 and 7 miles'
			when trip_distance <= 10 then 'in between 7 and 10 miles'
			else 'Over 10 miles' end as distance_band,
		count(*)
from green_taxi_trips 
where (date(green_taxi_trips.lpep_dropoff_datetime) >= '2019-10-01' and date(green_taxi_trips.lpep_dropoff_datetime) < '2019-11-01')
      and (date(green_taxi_trips.lpep_pickup_datetime) >= '2019-10-01' and date(green_taxi_trips.lpep_pickup_datetime) < '2019-11-01')
group by 1

Answer: 104,802; 198,924; 109,603; 27,678; 35,189

Question 4:
select date(green_taxi_trips.lpep_pickup_datetime),max(trip_distance) as day_max_distance
from green_taxi_trips 
group by 1 
order by day_max_distance desc
limit 1

Answer: '2019-10-31'

Question 5:
select a."PULocationID",b."Zone",sum(a.total_amount) as total_amount
from public.green_taxi_trips a
left join public.zones b on a."PULocationID" = b."LocationID"
where date(a.lpep_pickup_datetime) = '2019-10-18'
group by 1,2
having sum(a.total_amount) > 13000
order by total_amount desc

Answer: East Harlem North, East Harlem South, Morningside Heights

Question 6:
select a."PULocationID", 
       b."Zone" as "PUZone",
	   a."DOLocationID",
	   c."Zone" as "DOZone",
	   tip_amount
from public.green_taxi_trips a
left join public.zones b on a."PULocationID" = b."LocationID"
left join public.zones c on a."DOLocationID" = c."LocationID"
where date(a.lpep_pickup_datetime) >= '2019-10-01' and date(a.lpep_pickup_datetime) < '2019-11-01'
and b."Zone" = 'East Harlem North'
order by tip_amount desc
limit 1

Answer: JFK Airport


Question 7:

